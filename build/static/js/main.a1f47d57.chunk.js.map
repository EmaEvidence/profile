{"version":3,"sources":["assets/ema.png","components/Profile.jsx","components/Blogs.jsx","components/Links.jsx","components/Connect.jsx","components/Mentorship.jsx","components/Projects.jsx","components/Skills.jsx","components/Menu.jsx","components/Index.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Profile","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","bio","defaultBio","writeBio","bind","assertThisInitialized","_this2","count","write","setInterval","clearInterval","setState","react_default","a","createElement","className","Component","Blog","Links","Connect","Mentorship","Project","Skills","Menu","react","Link","to","Index","menuState","toggleMenu","displayMenu","src","ema","alt","components_Menu","setMenu","onClick","class","style","display","Switch","Route","path","exact","component","Blogs","Projects","App","BrowserRouter","components_Index","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a1f47d57.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ema.31ef00bb.png\";","import React, { Component } from 'react';\n\nclass Profile extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      bio: '',\n      defaultBio: 'Welcome, I am Emmanuel Alabi. You can call me ea. I am a fullstack Solution Provider(Software Engineer) with years of experience providing full stack web Solutions using Javascript and Nodejs. I follow TDD principles while programming and ensure that my code is properly optimised. I have a good eye for design and I can convert a design/mockup into an application. I am open to new ideas and a quick learner. I am a team player with great stakeholder management skills. If I am not coding, I am surfing the internet for Innovative Ideas, spending time with family, drawing or watching Sci Fi movies at play speed of 2. I also like passing down what I have learnt over time through direct mentorship. Master the logic, for languages are tools'\n    };\n    this.writeBio = this.writeBio.bind(this);\n  }\n\n  componentDidMount() {\n    this.writeBio();\n  }\n\n  writeBio() {\n    const { defaultBio } = this.state;\n    let count = 0;\n    const write = setInterval(() => {\n      let bio = this.state.bio;\n      bio += defaultBio[count];\n      if (!defaultBio[count]) {\n        return clearInterval(write);\n      }\n      this.setState({\n        bio\n      });\n      count += 1;\n    }, 100)\n  }\n\n  render() {\n    return (\n      <div className=\"profile\">\n        <span className=\"heading\">Profile</span>\n        <div className=\"text\">\n          {this.state.bio}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Profile;\n","import React, { Component } from 'react';\n\nclass Blog extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      bio: '',\n      defaultBio: 'Welcome, I am Emmanuel Alabi. You can call me ea. I am a fullstack Solution Provider(Software Engineer) with years of experience providing full stack web Solutions using Javascript and Nodejs. I follow TDD principles while programming and ensure that my code is properly optimised. I have a good eye for design and I can convert a design/mockup into an application. I am open to new ideas and a quick learner. I am a team player with great stakeholder management skills. If I am not coding, I am surfing the internet for Innovative Ideas, spending time with family, drawing or watching Sci Fi movies at play speed of 2. I also like passing down what I have learnt over time through direct mentorship. Master the logic, for languages are tools'\n    };\n    this.writeBio = this.writeBio.bind(this);\n  }\n\n  componentDidMount() {\n    this.writeBio();\n  }\n\n  writeBio() {\n    const { defaultBio } = this.state;\n    let count = 0;\n    const write = setInterval(() => {\n      let bio = this.state.bio;\n      bio += defaultBio[count];\n      if (!defaultBio[count]) {\n        return clearInterval(write);\n      }\n      this.setState({\n        bio\n      });\n      count += 1;\n    }, 100)\n  }\n\n  render() {\n    return (\n      <div className=\"profile\">\n        <span className=\"heading\">Blog</span>\n        <div className=\"text\">\n          {this.state.bio}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Blog;\n","import React, { Component } from 'react';\n\nclass Links extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      bio: '',\n      defaultBio: 'Welcome, I am Emmanuel Alabi. You can call me ea. I am a fullstack Solution Provider(Software Engineer) with years of experience providing full stack web Solutions using Javascript and Nodejs. I follow TDD principles while programming and ensure that my code is properly optimised. I have a good eye for design and I can convert a design/mockup into an application. I am open to new ideas and a quick learner. I am a team player with great stakeholder management skills. If I am not coding, I am surfing the internet for Innovative Ideas, spending time with family, drawing or watching Sci Fi movies at play speed of 2. I also like passing down what I have learnt over time through direct mentorship. Master the logic, for languages are tools'\n    };\n    this.writeBio = this.writeBio.bind(this);\n  }\n\n  componentDidMount() {\n    this.writeBio();\n  }\n\n  writeBio() {\n    const { defaultBio } = this.state;\n    let count = 0;\n    const write = setInterval(() => {\n      let bio = this.state.bio;\n      bio += defaultBio[count];\n      if (!defaultBio[count]) {\n        return clearInterval(write);\n      }\n      this.setState({\n        bio\n      });\n      count += 1;\n    }, 100)\n  }\n\n  render() {\n    return (\n      <div className=\"profile\">\n        <span className=\"heading\">Links</span>\n        <div className=\"text\">\n          {this.state.bio}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Links;\n","import React, { Component } from 'react';\n\nclass Connect extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      bio: '',\n      defaultBio: 'Welcome, I am Emmanuel Alabi. You can call me ea. I am a fullstack Solution Provider(Software Engineer) with years of experience providing full stack web Solutions using Javascript and Nodejs. I follow TDD principles while programming and ensure that my code is properly optimised. I have a good eye for design and I can convert a design/mockup into an application. I am open to new ideas and a quick learner. I am a team player with great stakeholder management skills. If I am not coding, I am surfing the internet for Innovative Ideas, spending time with family, drawing or watching Sci Fi movies at play speed of 2. I also like passing down what I have learnt over time through direct mentorship. Master the logic, for languages are tools'\n    };\n    this.writeBio = this.writeBio.bind(this);\n  }\n\n  componentDidMount() {\n    this.writeBio();\n  }\n\n  writeBio() {\n    const { defaultBio } = this.state;\n    let count = 0;\n    const write = setInterval(() => {\n      let bio = this.state.bio;\n      bio += defaultBio[count];\n      if (!defaultBio[count]) {\n        return clearInterval(write);\n      }\n      this.setState({\n        bio\n      });\n      count += 1;\n    }, 100)\n  }\n\n  render() {\n    return (\n      <div className=\"profile\">\n        <span className=\"heading\">Connect</span>\n        <div className=\"text\">\n          {this.state.bio}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Connect;\n","import React, { Component } from 'react';\n\nclass Mentorship extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      bio: '',\n      defaultBio: 'Welcome, I am Emmanuel Alabi. You can call me ea. I am a fullstack Solution Provider(Software Engineer) with years of experience providing full stack web Solutions using Javascript and Nodejs. I follow TDD principles while programming and ensure that my code is properly optimised. I have a good eye for design and I can convert a design/mockup into an application. I am open to new ideas and a quick learner. I am a team player with great stakeholder management skills. If I am not coding, I am surfing the internet for Innovative Ideas, spending time with family, drawing or watching Sci Fi movies at play speed of 2. I also like passing down what I have learnt over time through direct mentorship. Master the logic, for languages are tools'\n    };\n    this.writeBio = this.writeBio.bind(this);\n  }\n\n  componentDidMount() {\n    this.writeBio();\n  }\n\n  writeBio() {\n    const { defaultBio } = this.state;\n    let count = 0;\n    const write = setInterval(() => {\n      let bio = this.state.bio;\n      bio += defaultBio[count];\n      if (!defaultBio[count]) {\n        return clearInterval(write);\n      }\n      this.setState({\n        bio\n      });\n      count += 1;\n    }, 100)\n  }\n\n  render() {\n    return (\n      <div className=\"profile\">\n        <span className=\"heading\">Mentorship</span>\n        <div className=\"text\">\n          {this.state.bio}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Mentorship;\n","import React, { Component } from 'react';\n\nclass Project extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      bio: '',\n      defaultBio: 'Welcome, I am Emmanuel Alabi. You can call me ea. I am a fullstack Solution Provider(Software Engineer) with years of experience providing full stack web Solutions using Javascript and Nodejs. I follow TDD principles while programming and ensure that my code is properly optimised. I have a good eye for design and I can convert a design/mockup into an application. I am open to new ideas and a quick learner. I am a team player with great stakeholder management skills. If I am not coding, I am surfing the internet for Innovative Ideas, spending time with family, drawing or watching Sci Fi movies at play speed of 2. I also like passing down what I have learnt over time through direct mentorship. Master the logic, for languages are tools'\n    };\n    this.writeBio = this.writeBio.bind(this);\n  }\n\n  componentDidMount() {\n    this.writeBio();\n  }\n\n  writeBio() {\n    const { defaultBio } = this.state;\n    let count = 0;\n    const write = setInterval(() => {\n      let bio = this.state.bio;\n      bio += defaultBio[count];\n      if (!defaultBio[count]) {\n        return clearInterval(write);\n      }\n      this.setState({\n        bio\n      });\n      count += 1;\n    }, 100)\n  }\n\n  render() {\n    return (\n      <div className=\"profile\">\n        <span className=\"heading\">Projects</span>\n        <div className=\"text\">\n          {this.state.bio}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Project;\n","import React, { Component } from 'react';\n\nclass Skills extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      bio: '',\n      defaultBio: 'Welcome, I am Emmanuel Alabi. You can call me ea. I am a fullstack Solution Provider(Software Engineer) with years of experience providing full stack web Solutions using Javascript and Nodejs. I follow TDD principles while programming and ensure that my code is properly optimised. I have a good eye for design and I can convert a design/mockup into an application. I am open to new ideas and a quick learner. I am a team player with great stakeholder management skills. If I am not coding, I am surfing the internet for Innovative Ideas, spending time with family, drawing or watching Sci Fi movies at play speed of 2. I also like passing down what I have learnt over time through direct mentorship. Master the logic, for languages are tools'\n    };\n    this.writeBio = this.writeBio.bind(this);\n  }\n\n  componentDidMount() {\n    this.writeBio();\n  }\n\n  writeBio() {\n    const { defaultBio } = this.state;\n    let count = 0;\n    const write = setInterval(() => {\n      let bio = this.state.bio;\n      bio += defaultBio[count];\n      if (!defaultBio[count]) {\n        return clearInterval(write);\n      }\n      this.setState({\n        bio\n      });\n      count += 1;\n    }, 100)\n  }\n\n  render() {\n    return (\n      <div className=\"profile\">\n        <span className=\"heading\">Skills</span>\n        <div className=\"text\">\n          {this.state.bio}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Skills;\n","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Menu = () => {\n  return(\n    <Fragment>\n      <div>\n        <span className=\"selected\">\n          <Link to=\"/\">Profile</Link>\n        </span>\n      </div>\n      <div>\n        <span><Link to=\"/skills\">Skills</Link></span>\n        <span><Link to=\"/projects\">Projects</Link></span>\n        <span><Link to=\"/links\">Links</Link></span>\n      </div>\n      <div>\n        <span><Link to=\"/blogs\">Blogs</Link></span>\n        <span><Link to=\"/connect\">Connect</Link></span>\n      </div>\n      <div>\n        <span><Link to=\"/mentorship\">Mentorship</Link></span>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Menu;\n","import React, { Component } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport ema from '../assets/ema.png';\nimport Profile from './Profile';\nimport Blogs from './Blogs';\nimport Links from './Links';\nimport Connect from './Connect';\nimport Mentorship from './Mentorship';\nimport Projects from './Projects';\nimport Skills from './Skills';\nimport Menu from './Menu';\n\nclass Index extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      menuState: false,\n    };\n    this.toggleMenu = this.toggleMenu.bind(this);\n  }\n\n  toggleMenu() {\n    this.setState({\n      menuState: !this.state.menuState\n    });\n  }\n\n  render() {\n    const displayMenu = (this.state.menuState) ? 'block' : 'none';\n    return (\n      <div className=\"container\">\n        <div className=\"left\">\n          <div className=\"image\">\n            <img src={ema} alt=\"\" />\n            <div className=\"name\">\n              <span className=\"handle\">ea</span>\n              <span className=\"title\">Fullstack Software Engineer</span>\n              <span className=\"tagline\"><i>making products Users love</i></span>\n            </div>\n          </div>\n          <div className=\"name\">\n            <span className=\"handle\">ea</span>\n            <span className=\"title\">Fullstack Software Engineer</span>\n            <span className=\"tagline\"><i>making products Users love</i></span>\n          </div>\n          <hr />\n          <div className=\"links\">\n            <Menu setMenu={this.setMenu} />\n          </div>\n          <div className=\"hamburg\" onClick={this.toggleMenu}>\n            {\n              (displayMenu === 'none') ? <i class=\"fas fa-bars\"></i> : <i class=\"fas fa-times\"></i>\n            }\n          </div>\n          <div className=\"mobile-links\" style={{ display: displayMenu }}>\n            <Menu setMenu={this.setMenu} />\n          </div>\n        </div>\n        <div className=\"right\">\n          <Switch>\n            <Route path=\"/\" exact component={Profile} />\n            <Route path=\"/blogs\" exact component={Blogs} />\n            <Route path=\"/connect\" exact component={Connect} />\n            <Route path=\"/links\" exact component={Links} />\n            <Route path=\"/mentorship\" exact component={Mentorship} />\n            <Route path=\"/projects\" exact component={Projects} />\n            <Route path=\"/skills\" exact component={Skills} />\n          </Switch>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Index;\n","import React, { Component } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport Index from './components/Index'\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Index />\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}